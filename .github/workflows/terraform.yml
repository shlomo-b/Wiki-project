name: Terraform CD

on:
  push: 
    branches: [ "main" ]
    paths:
      - 'main-infra/**'
  pull_request:
    paths:
      - 'main-infra/**'
  
permissions:
  contents: read

jobs: 
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.6

    - name: Debug Environment
      run: |
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Event Name: ${{ github.event_name }}"
        echo "AWS_ACCESS_KEY_ID is set: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}"
        echo "AWS_SECRET_ACCESS_KEY is set: ${{ secrets.AWS_SECRET_ACCESS_KEY != '' }}"
        terraform version
        aws --version
      working-directory: ./main-infra

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=shlomo-project-ci-cd" \
          -backend-config="key=project-devops/terraform.tfstate" \
          -backend-config="region=us-east-1" \
          -input=false
      working-directory: ./main-infra  

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./main-infra  
       
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ./main-infra  
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ./main-infra
      run: |
        terraform apply -auto-approve

    - name: Install ArgoCD (only if not installed)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        aws eks update-kubeconfig --name my-cluster --region us-east-1
        helm repo add argo https://argoproj.github.io/argo-helm
        helm repo update
        if ! helm list -n argocd | grep -q prod-argocd; then
          echo "ArgoCD is not installed. Installing."
          helm install prod-argocd argo/argo-cd --namespace argocd --create-namespace --version 7.7.23
        else
          echo "ArgoCD is already installed. Skipping installation."
        fi

    - name: Terraform Output
      run: terraform output
      working-directory: ./main-infra
